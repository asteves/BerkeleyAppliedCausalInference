set.seed(42)
data_a3 <- tibble(N = 1000,
D = sample(0:1, 1000, replace = T),X1 = rnorm(1000),X2 = runif(1000),X3 = rnorm(1000, 10, 5),Y = 2*D + 4*X1 + X2 + .5*X3 + rnorm(1000))
library(tidyverse)
library(estimatr)
set.seed(42)
data_a3 <- tibble(N = 1000,
D = sample(0:1, 1000, replace = T),X1 = rnorm(1000),X2 = runif(1000),X3 = rnorm(1000, 10, 5),Y = 2*D + 4*X1 + X2 + .5*X3 + rnorm(1000))
m <- lm_robust(D~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ex<- data_a3$Y - predict(m, data_a3)
m <- lm_robust(Y~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ey<- data_a3$Y - predict(m, data_a3)
m <- lm_robust(ey~ex, se_type = "HC0")
m<- tidy(m)
resid_coeff <- filter(m, term != "(Intercept)")$estimate
m <- lm_robust(Y~ X1 + X2 + X3 + D, data = data_a3, se_type = "HC0")
m<-tidy(m)
treat_coeff <- filter(m, term == "D")$estimate
fwl <- function(Y, D, controls, data){
a_form <- reformulate(termlabels = controls,
response = D)
b_form <- reformulate(termlabels = c(controls),
response = Y)
d_form <- reformulate(termlabels = c(D, controls),
response = Y)
m1 <- lm_robust(as.formula(a_form), data = data)
ex <- data[[D]] - m1$fitted.values
m2 <- lm_robust(as.formula(b_form), data = data)
ey <- data[[Y]] - m2$fitted.values
m3 <- lm_robust(ey ~ ex)
resid_coef <- unname(m3$coefficients[2])
m4 <- lm_robust(as.formula(d_form), data = data)
treat_coef <- unname(m4$coefficients[2])
return(round(treat_coef,4)==round(resid_coef,4))
}
fwl("Y", "D", controls = c("X1", "X2", "X3"), data = data_a3)
}
fwl <- function(Y, D, controls, data){
a_form <- reformulate(termlabels = controls,
response = D)
b_form <- reformulate(termlabels = c(controls),
response = Y)
d_form <- reformulate(termlabels = c(D, controls),
response = Y)
m1 <- lm_robust(as.formula(a_form), data = data)
ex <- data[[D]] - m1$fitted.values
m2 <- lm_robust(as.formula(b_form), data = data)
ey <- data[[Y]] - m2$fitted.values
m3 <- lm_robust(ey ~ ex)
resid_coef <- unname(m3$coefficients[2])
m4 <- lm_robust(as.formula(d_form), data = data)
treat_coef <- unname(m4$coefficients[2])
return(c(round(treat_coef,4),round(resid_coef,4)))
}
fwl("Y", "D", controls = c("X1", "X2", "X3"), data = data_a3)
m <- lm_robust(D~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ex<- data_a3$Y - predict(m, data_a3)
m <- lm_robust(Y~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ey<- data_a3$Y - predict(m, data_a3)
m <- lm_robust(ey~ex, se_type = "HC0")
m<- tidy(m)
fwl <- function(Y, D, controls, data){
a_form <- reformulate(termlabels = controls,
response = D)
b_form <- reformulate(termlabels = c(controls),
response = Y)
d_form <- reformulate(termlabels = c(D, controls),
response = Y)
m1 <- lm_robust(as.formula(a_form), data = data)
print(predict(m1, data))
ex <- data[[D]] - m1$fitted.values
m2 <- lm_robust(as.formula(b_form), data = data)
ey <- data[[Y]] - m2$fitted.values
m3 <- lm_robust(ey ~ ex)
resid_coef <- unname(m3$coefficients[2])
m4 <- lm_robust(as.formula(d_form), data = data)
treat_coef <- unname(m4$coefficients[2])
return(c(round(treat_coef,4),round(resid_coef,4)))
}
fwl("Y", "D", controls = c("X1", "X2", "X3"), data = data_a3)
m <- lm_robust(D~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ex<- data_a3$Y - predict(m, data_a3)
fwl <- function(Y, D, controls, data){
a_form <- reformulate(termlabels = controls,
response = D)
b_form <- reformulate(termlabels = c(controls),
response = Y)
d_form <- reformulate(termlabels = c(D, controls),
response = Y)
m1 <- lm_robust(as.formula(a_form), data = data)
print(predict(m1, data))
ex <- data[[D]] - m1$fitted.values
print(ex)
m2 <- lm_robust(as.formula(b_form), data = data)
ey <- data[[Y]] - m2$fitted.values
m3 <- lm_robust(ey ~ ex)
resid_coef <- unname(m3$coefficients[2])
m4 <- lm_robust(as.formula(d_form), data = data)
treat_coef <- unname(m4$coefficients[2])
return(c(round(treat_coef,4),round(resid_coef,4)))
}
fwl("Y", "D", controls = c("X1", "X2", "X3"), data = data_a3)
m <- lm_robust(D~ X1 + X2 + X3, data = data_a3, se_type = "HC0")
ex<- data_a3$Y - predict(m, data_a3)
data_a3$Y - predict(m, data_a3)
data_a3$Y - predict(m, data_a3)
library(fabricatr)
set.seed(720)
data_a4 <- fabricate(
N = 1000,
Y = rnorm(N, 100, 10),
D = complete_ra(N)
)
library(fabricatr)
set.seed(720)
data_a4 <- fabricate(
N = 1000,
Y = rnorm(N, 100, 10),
D = complete_ra(N)
)
library(randomizr)
set.seed(720)
data_a4 <- fabricate(
N = 1000,
Y = rnorm(N, 100, 10),
D = c
)
set.seed(720)
data_a4 <- fabricate(
N = 1000,
Y = rnorm(N, 100, 10),
D = complete_ra(N)
)
mean(data_a4[["Y"]][data_a4["D"]]==1])
mean(data_a4[["Y"]][data_a4[["D"]]==1])
mean(data_a4[["Y"]][data_a4[["D"]]==1]) - mean(data_a4[["Y"]][data_a4[["D"]]==0])
t <- mean(data_a4[["Y"]][data_a4[["D"]]==1])
c <- mean(data_a4[["Y"]][data_a4[["D"]]==0])
est_ATE <- t - c
est_ATE
set.seed(42)
data_a3 <- tibble(
N = 1000,
D = sample(0:1, 1000, replace = T),
X1 = rnorm(1000),
X2 = runif(1000),
X3 = rnorm(1000, 10, 5),
Y = 2*D + 4*X1 + X2 + .5*X3 + rnorm(1000)
)
set.seed(720)
data_a4 <- fabricate(
N = 1000,
Y = rnorm(N,100,10),
D = complete_ra(N)
)
wo <- subset(data_a4, D == 0, select = c(Y))
w <- subset(data_a4, D ==1, select = c(Y))
neww <- tibble(
with1 = c(w),
with0 = c(wo)
)
data_a3 <- tibble(
N = 1000,
D = sample(0:1, 1000, replace = T),
X1 = rnorm(1000),
X2 = runif(1000),
X3 = rnorm(1000, 10, 5),
Y = 2*D + 4*X1 + X2 + .5*X3 + rnorm(1000)
)
return(treat_coef==resid_coef)}
fwl=function(data, covaraites, treatment_variable, outcome_variable){
ex=tidy(lm_robust(D~covaraites,data =data))[2,2]-data[covaraites]#b
ey=lm_robust(Y~covariates,data =data)#cr
resid_coef=lm_robust(ex~ey,data =data)[ex]#d
treat_coef=lm_robust(Y~D+covaraites,data =data)[D]
return(treat_coef==resid_coef)
}
covar=c("X1","X2","X3")#
fwl(data_a3,covar,"D", "Y")
69/7
if(5 %% 2 == 0 | 4 %% 2 == 0){
print("True")
}
vec <- c(2,9,14,21,69)
count <- 0
for(i in 1:length(vec)){
count <- count+ 1
if(vec[i]%%2 == 0 | vec[i]%%7 == 0){
count <- count+ 1
}
count
if(vec[i]%%2 == 0 | vec[i]%%7 == 0){
count <- count+ 1
}}
vec <- c(2,9,14,21,69)
count <- 0
for(i in 1:length(vec)){
if(vec[i]%%2 == 0 | vec[i]%%7 == 0){
count <- count+ 1
}
}
count
