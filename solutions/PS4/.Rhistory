library(formatR)
library(tidyverse)
library(estimatr)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
library(formatR)
library(tidyverse)
library(estimatr)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
hyde <- read_csv(file = "HydeData.csv")
hyde$R1R2only <- NA
hyde <- read_csv(file = "Hyde_WP_2007_Armenia2003electionresults.csv")
hyde$R1R2only <- NA
hyde$R1R2only[hyde$O2==1] <- 0
hyde$R1R2only[hyde$O3==1] <- 1
write.csv(hyde, "HydeData.csv", row.names = F)
hyde <- read_csv(file = "HydeData.csv")
hyde <- read_csv(file = "HydeData.csv")
hyde_sub1 <- hyde %>%
filter(O1 == 1 | O4 == 1)
hyde_sub2 <- hyde %>%
filter(mon_voting == 0)
hyde_sub3 <- hyde %>%
filter(mon_voting_R2 == 0)
hyde_sub4 <- hyde %>%
filter(mon_voting == 1)
# Should also have this
# but these columns were not included in your dataset by mistake
hyde_sub5 <- hyde %>%
filter(O3 == 1 | O4 == 1)
get_dm <- function(Y, D, data){
formula <- reformulate(termlabels = D,
response = Y)
out <- difference_in_means(formula, data = data)%>%
tidy()%>%
mutate(estimate = round(abs(estimate),3),
statistic = abs(statistic),
p.value = round(p.value, 4))%>%
select(estimate, t = statistic, p.value)
return(out)
}
row1 <- get_dm("kocharian", "mon_voting", data = hyde)
row2 <- get_dm("KocharianR2", "mon_votingR2", data = hyde)
row3 <- get_dm("KocharianR2", "O4", data = hyde_sub1)
row4 <- get_dm("AveKocharian", "O4", data = hyde_sub1)
row5 <- get_dm("AveKocharian", "O9", data = hyde)
row6 <- get_dm("KocharianR2", "mon_voting", data = hyde_sub3)
row7 <- get_dm("KocharianR2","mon_votingR2", data = hyde_sub2)
# This row is going to be a bit off because your instructor
# didn't include all the appropriate rows in the dataset
row8 <- get_dm("KocharianR2", "O4",hyde_sub5 )
row9 <- get_dm("KocharianR2", "O4", hyde_sub4)
row10 <- get_dm("KocharianR2", "R1R2only", hyde)
### Get all the rows into one data frame
bind_rows(row1, row2, row3, row4, row5, row6,
row7, row8, row9, row10)%>%
mutate(estimate = estimate*100)%>%
knitr::kable(., caption = "Difference of Means Tests Comparing 'Treatment and 'Control' Groups", col.names = c("Difference (Percentage)", "t-statistic", "p value"))
data <- read_csv("JakielaData.csv")
glimpse(data)
m1 <- lm_robust(primary ~ treatment,
fixed_effects = ~ country + year,
data = data)
m2 <- lm_robust(secondary ~ treatment,
fixed_effects = ~country + year,
data = data)
### Yet a different package to show how to present models
modelsummary::modelsummary(list(m1, m2))
data$fpe_year
data$year
data <- data %>%
mutate(lengthTreat = max(year)-fpe_year)
data$lengthTreat
glimpse(data)
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = country, y = lengthTreat))+
geom_col()
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = country, y = lengthTreat))+
geom_col()+
coord_flip()
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = reorder(country, -lengthTreat), y = lengthTreat))+
geom_col()+
coord_flip()
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_col()+
coord_flip()
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, -lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()+
theme_bw()+
ggtitle("Differential Treatment between Countries")
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()+
theme_bw()+
ggtitle("Differential Treatment between Countries")
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()+
xlab("Difference between treatment year and 2015")+
ylab("Country")+
theme_bw()+
ggtitle("Differential Treatment between Countries")
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()+
ylab("Difference between treatment year and 2015")+
xlab("Country")+
theme_bw()+
ggtitle("Differential Treatment between Countries")
data%>%
filter(!is.na(primary)
)
primary <- data
secondary <- data
## Run models
m3 <- lm_robust(treatment ~ country + year, data = primary)
m3
primary$treatment - m3$fitted.values
residuals <- primary$treatment - m3$fitted.values
primary <- primary %>%
mutate(residuals = residuals)
primary
View(primary)
primary <- primary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
primary %>% summarise(out = sum(primary*weight))
## Run models
m3 <- lm_robust(treatment ~ country + factor(year), data = primary)
residuals <- primary$treatment - m3$fitted.values
primary <- primary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
primary %>% summarise(out = sum(primary*weight))
lm_robust(primary ~ treatment, fixed_effects= ~country + year, data = primary)
## Run models
m3 <- lm(treatment ~ country + factor(year), data = primary)
m3
residuals(m3)
residuals <- residuals(m3)
primary <- primary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
primary %>% summarise(out = sum(primary*weight))
View(data %>% filter(is.na(primary)))
sum(primary$weight)
data <- haven::read_dta("WDI-FPE-data.dta")
primary <- data %>%
filter(!is.na(primary))
data <- read_csv("JakielaData.csv")
data <- haven::read_dta("WDI-FPE-data.dta")
primary <- data %>%
filter(!is.na(primary))
secondary <- data %>%
filter(!is.na(secondary))
m1 <- lm_robust(primary ~ treatment,
fixed_effects = ~ country + year,
data = data%>%
filter(!is.na(primary)))
m2 <- lm_robust(secondary ~ treatment,
fixed_effects = ~country + year,
data = data)
### Yet a different package to show how to present models
modelsummary::modelsummary(list(m1, m2))
data <- read_csv("JakielaData.csv")
m1 <- lm_robust(primary ~ treatment,
fixed_effects = ~ country + year,
data = data%>%
filter(!is.na(primary)))
m2 <- lm_robust(secondary ~ treatment,
fixed_effects = ~country + year,
data = data)
### Yet a different package to show how to present models
modelsummary::modelsummary(list(m1, m2))
data <- haven::read_dta("WDI-FPE-data.dta")
write.csv(data, file = "JakielaData.csv", row.names = F)
data <- read_csv("JakielaData.csv")
primary <- data %>%
filter(!is.na(primary))
secondary <- data %>%
filter(!is.na(secondary))
m1 <- lm_robust(primary ~ treatment,
fixed_effects = ~ country + year,
data = primary)
m2 <- lm_robust(secondary ~ treatment,
fixed_effects = ~country + year,
data = secondary)
### Yet a different package to show how to present models
modelsummary::modelsummary(list(m1, m2))
data %>%
mutate(lengthTreat = max(year)-fpe_year)%>%
distinct(country, lengthTreat)%>%
arrange(desc(lengthTreat))%>%
ggplot(aes(x = reorder(country, lengthTreat), y = lengthTreat))+
geom_bar(stat = "identity")+
coord_flip()+
ylab("Difference between treatment year and 2015")+
xlab("Country")+
theme_bw()+
ggtitle("Differential Treatment between Countries")
# I cleaned this data up for you, so this step is equivalent to breaking it down by primary and secondary
## Run models
m3 <- lm(treatment ~ country + factor(year), data = primary)
residuals <- residuals(m3)
primary <- primary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
primary %>%
summarise(beta = sum(primary*treatment_weight))
primary %>%
summarise(beta = sum(primary*weight))
## Run models
m3 <- lm_robust(treatment ~ country + factor(year), data = primary)
residuals <- primary$treatment - m3$fitted.values
primary <- primary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
primary %>%
summarise(beta = sum(primary*weight))
m4 <- lm_robust(treatment ~ country + factor(year), data = secondary)
residuals_s <- secondary$treatment - m4$fitted.values
secondary <- secondary %>%
mutate(residuals = residuals,
weight = residuals / sum(residuals^2))
secondary <- secondary %>%
mutate(residuals = residuals_s,
weight = residuals / sum(residuals^2))
secondary %>%
summarise(beta = sum(secondary*weight))
#*iv*) Make a histogram (`geom_histogram()`) of the weights. Are any weights negative?
primary %>%
ggplot(., aes(x = weight))+
geom_histogram()
#*iv*) Make a histogram (`geom_histogram()`) of the weights. Are any weights negative?
primary %>%
ggplot(., aes(x = weight))+
geom_histogram()+
geom_vline(xintercept = 0)
#*iv*) Make a histogram (`geom_histogram()`) of the weights. Are any weights negative?
primary %>%
ggplot(., aes(x = weight))+
geom_histogram()+
geom_vline(xintercept = 0)+
ggtitle("Primary School Weights")
secondary %>%
ggplot(., aes(x = weight))+
geom_histogram()+
geom_vline(xintercept = 0)+
ggtitle("Secondary School Weights")
#*iv*) Make a histogram (`geom_histogram()`) of the weights. Are any weights negative?
primary %>%
ggplot(., aes(x = weight))+
geom_histogram()+
geom_vline(xintercept = 0)+
ggtitle("Primary School Weights")
outcomes_residuals_p <- lm_robust(primary ~ country + factor(year), data = primary)
outcomes_residuals_s <- lm_robust(primary ~ country + factor(year),
data = secondary)
out_resid_p <- primary$primary - outcomes_residuals_p$fitted.values
out_resid_s <- secondary$secondary - outcomes_residuals_s$fitted.values
## Join them up
primary %>%
mutate(outcome_residuals = out_resid_p)
## Join them up
primary <- primary %>%
mutate(outcome_residuals = out_resid_p)
secondary <- secondary %>%
mutate(outcome_residuals = out_resid_s)
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = treatment))+
geom_poin()
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = treatment))+
geom_point()
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
secondary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
glimpse(primary)
#- *vi*) Statistically test if the slopes of the two groups are the same by running a regression of the outcome residuals on the treatment residuals and the interaction of the treatment residuals and treatment. For either model, is the interaction term significant? If it is, what does that mean, according to Jakiela?
msp <- lm_robust(outcome_residuals ~ residuals * factor(treatment), data = primary)
msp
mss <- lm_robust(outcome_residuals ~ residuals * factor(treatment), data = secondary)
modelsummary::modelsummary(list(msp, mss))
outcomes_residuals_s <- lm_robust(secondary ~ country + factor(year),
data = secondary)
out_resid_p <- primary$primary - outcomes_residuals_p$fitted.values
out_resid_s <- secondary$secondary - outcomes_residuals_s$fitted.values
## Join them up
primary <- primary %>%
mutate(outcome_residuals = out_resid_p)
secondary <- secondary %>%
mutate(outcome_residuals = out_resid_s)
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
secondary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
#- *vi*) Statistically test if the slopes of the two groups are the same by running a regression of the outcome residuals on the treatment residuals and the interaction of the treatment residuals and treatment. For either model, is the interaction term significant? If it is, what does that mean, according to Jakiela?
msp <- lm_robust(outcome_residuals ~ residuals * factor(treatment), data = primary)
mss <- lm_robust(outcome_residuals ~ residuals * factor(treatment), data = secondary)
modelsummary::modelsummary(list(msp, mss))
titanic <- read_csv("titanic.csv")
### Get first class vs other
titanic <- titanic %>%
mutate(pclass = if_else(pclass == 1, 1, 0))
### Naive estimator
difference_in_means(survived ~ pclass, data =titanic)
## Plot the residuals against each other
primary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
secondary %>%
ggplot(aes(residuals, outcome_residuals, color = as.character(treatment)))+
geom_point()+
geom_smooth(method = "lm", se = F)
knitr::kable(list(lm4, lm5, lm6))
lm4 <- lm_robust(kocharian ~ mon_voting + totalvoters + total, data = hyde)
lm5 <- lm_robust(kocharian ~ mon_voting + totalvoters, data = hyde)
lm6 <- lm_robust(kocharian ~ mon_voting + total, data = hyde)
knitr::kable(list(lm4, lm5, lm6))
lm4 <- lm_robust(kocharian ~ mon_voting + totalvoters + total, data = hyde)%>%
tidy()
lm5 <- lm_robust(kocharian ~ mon_voting + totalvoters, data = hyde)%>%
tidy()
lm6 <- lm_robust(kocharian ~ mon_voting + total, data = hyde)%>%
tidy()
knitr::kable(list(lm4, lm5, lm6))
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- read_dta(full_path)
return(df)
}
card <- read_data("card.dta")
read_data <- function(df)
{
full_path <- paste("https://raw.github.com/scunning1975/mixtape/master/",
df, sep = "")
df <- haven::read_dta(full_path)
return(df)
}
card <- read_data("card.dta")
View(card)
write.csv(card, file = "~/Desktop/card.csv", row.names = F)
pagedown::chrome_print("~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture23.html", "~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture23.pdf")
