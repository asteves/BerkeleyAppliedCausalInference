rdd <- read_csv('rdd.csv')
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(estimatr)
library(fabricatr)
library(formatR)
library(ri2)
library(randomizr)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
# Chunk 3
data <- read_csv("Middleton_Rogers_AI_2010.csv")
ate <- difference_in_means(relevant_measures_net ~ treatment, data = data)%>%
tidy()%>%
filter(term =="treatment")%>%
pull(estimate)
ate
# Chunk 4
data %>%
mutate(treatment = as.character(treatment))%>%
ggplot(aes(treatment, relevant_measures_net))+
geom_point()+
theme_bw()+
xlab("Treatment")+
ylab("Outcome")
# Chunk 5
set.seed(1234567)
# Chunk 6
dec <- declare_ra(N = 65,m = 48)
ri2_out <- ri2::conduct_ri(
formula = relevant_measures_net ~ treatment,
declaration = dec,
sharp_hypothesis = 0,
data = data,
assignment = "treatment"
)
# Chunk 7
ri2_out$sims_df%>%
ggplot(aes(est_sim))+
geom_histogram(binwidth = 10, alpha = 0.5)+
geom_vline(xintercept = ate)+
xlab("Estimated ATE")+
ylab("")
# Chunk 8
# Chunk 9
p_c_MI06 <- 8755/26481
p_t_MI06 <- 2123/5310
ATE_MI06 = p_t_MI06 - p_c_MI06
ATE_MI06
p_c_MI07 <- 88960/348227
p_t_MI07 <- 3791/12391
ATE_MI07 = p_t_MI07 - p_c_MI07
ATE_MI07
p_c_IL09 <- 2600/15676
p_t_IL09 <- 1936/9326
ATE_IL09 = p_t_IL09 - p_c_IL09
ATE_IL09
# Chunk 10
SE_MI06 <- sqrt((p_t_MI06 * (1-p_t_MI06))/5310 +
(p_c_MI06 * (1-p_c_MI06))/26481)
SE_MI07 <- sqrt((p_t_MI07 * (1-p_t_MI07))/12391 +
(p_c_MI07 * (1-p_c_MI07))/348227)
SE_IL09 <- sqrt((p_t_IL09 * (1-p_t_IL09))/9326 +
(p_c_IL09 * (1-p_c_IL09))/15676)
prec_MI06 <- 1/SE_MI06^2
prec_MI07 <- 1/SE_MI07^2
prec_IL09 <- 1/SE_IL09^2
prec_MI06
prec_MI07
prec_IL09
# Chunk 11
weighted.mean(c(ATE_MI06, ATE_MI07, ATE_IL09), c(prec_MI06, prec_MI07, prec_IL09))
# Chunk 12
rdd <- read_csv('rdd.csv')
# Chunk 13
# Chunk 14
rdd <- read_csv('rdd.csv')
View(rdd)
rdrobust::rdplot(rdd$in_2016, rdd$margin, binselect = 'es')
summary(rdrobust::rdrobust(rdd$in_2016, rdd$margin))
nc <- data.table::fread("northCarolina.csv")
fl <- data.table::fread("florida.csv")
nc_s <- lm_robust(search ~ of_gender + of_race +  race_gender + subject_age + investigatory + Officer_Years_of_Service, data = nc, fixed_effects = ~month + year + CMPD_Division)
summary(nc_s)
1.90e-03
fl_s <- lm_robust(search_occur ~ of_gender + of_race + race_gender + subject_age + out_of_state+investigatory + officer_years_of_service+ officer_age, data = fl, fixed_effects = ~hour_of_day + month + year + county_name)
summary(fl_s)
bind_rows(fl_s %>% tidy()%>%mutate(model = "fl"), nc_s %>% tidy()%>%mutate(model = "nc"))%>%
filter(term == "of_gender")%>%
ggplot(aes(y = term, x = estimate))+
geom_vline(xintercept = 0, linetype = 2)+
geom_point()+
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high, height = 0.1))+
theme_bw()
bind_rows(fl_s %>% tidy()%>%mutate(model = "fl"), nc_s %>% tidy()%>%mutate(model = "nc"))%>%
filter(term == "of_gender")%>%
ggplot(aes(y = model, x = estimate))+
geom_vline(xintercept = 0, linetype = 2)+
geom_point()+
geom_errorbarh(aes(xmin = conf.low, xmax = conf.high, height = 0.1))+
theme_bw()
## For the fixed effects, we'll need to convert some variables into factors
nc_s <- nc_2 %>%
mutate(across(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor)
## For the fixed effects, we'll need to convert some variables into factors
nc_s <- nc_s %>%
mutate(across(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor)
## For the fixed effects, we'll need to convert some variables into factors
nc_s <- nc %>%
mutate(across(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor)
## For the fixed effects, we'll need to convert some variables into factors
nc_s <- nc %>%
mutate(across(race_gender, of_gender, of_race, month, year, CMPD_Division, as.factor))
## For the fixed effects, we'll need to convert some variables into factors
nc_s <- nc %>%
mutate(across(c(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor))
glimpse(nc_s)
## For the fixed effects, we'll need to convert some variables into factors
nc_2 <- nc %>%
mutate(across(c(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor))
nc_s <- lm_robust(search ~ of_gender + of_race +  race_gender + subject_age + investigatory + Officer_Years_of_Service, data = nc, fixed_effects = ~month + year + CMPD_Division)
fl_2 <- fl %>%
mutate(across(c(race_gender, of_gender, of_race, hour_of_day, month, year, county_name), as.factor))
fl_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "out_of_state", "investigatory", "of_race", "officer_years_of_service", "officer_age", "hour_of_day", "month", "year", "county_name"))
effectiveWeights <- function(Y, controls, data){
# Make the OLS formula call
treat_formula <- reformulate(termlabels = c(controls),
response = Y)
# Run a regression of the treatment on the controls
treat.model <- lm(as.formula(treat_formula), data = data)
# Extract the residuals from that regression
d.tilde <- as.numeric(residuals(treat.model))
# Square the residuals.
weights <- d.tilde^2
return(weights)
}
fl_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "out_of_state", "investigatory", "of_race", "officer_years_of_service", "officer_age", "hour_of_day", "month", "year", "county_name"))
fl_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "out_of_state", "investigatory", "of_race", "officer_years_of_service", "officer_age", "hour_of_day", "month", "year", "county_name"), data = fl_2)
fl_w
nc_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "investigator", "of_race", "Officer_Years_of_Service", "month", "year", "CMPD_Division"), data = nc_2)
nc_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "investigatory", "of_race", "Officer_Years_of_Service", "month", "year", "CMPD_Division"), data = nc_2)
length(fl_w)
tibble(x = 1:2712479, y = fl_w)%>%
ggplot(aes(x, y))+
geom_point()+
geom_hline(yintercept = 0.05)
tibble(x = 1:2712478, y = fl_w)%>%
ggplot(aes(x, y))+
geom_point()+
geom_hline(yintercept = 0.05)
nc_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "investigatory", "of_race", "Officer_Years_of_Service", "month", "year", "CMPD_Division"), data = nc_2)
## To deal with the huge amount of computation randomly sample
## 10,000 rows
## Florida Effective Weights
sampled <- sample(1:2712478, 10000, replace = F)
sampled
fl_w_10000 <- fl_w[sampled,]
fl_w_10000 <- fl_w[c(sampled),]
glimpse(fl_w)
fl_w_10000 <- fl_w[c(sampled)]
tibble(x = 1:10000, y = fl_w)%>%
ggplot(aes(x, y))+
geom_point()+
geom_hline(yintercept = 0.05)
tibble(x = 1:10000, y = fl_w_10000)%>%
ggplot(aes(x, y))+
geom_point()+
geom_hline(yintercept = 0.05)+
ggtitle("Effective Weights for Florida")
nc_sample <- sample(1:length(nc_w), 10000, replace = F)
nc_w_10000 <- nc_w[nc_sample]
nc_w_10000
tibble(x=1:10000, y = nc_w_10000)%>%
ggplot(aes(x,y))+
geom_point()+
geom_hline(yintercept = 0.05)+
ggtitle("Effective Weights for NC")
set.seed(15791)
set.seed(15791)
nc_sample <- sample(1:length(nc_2), 10000, replace = F)
nc_2 <- nc %>%
mutate(across(c(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor))
nc_sample <- sample(1:length(nc_2), 10000, replace = F)
nc_2 <- nc %>%
mutate(across(c(race_gender, of_gender, of_race, month, year, CMPD_Division), as.factor))
nc_2
length(nc_2)
length(nc)
nc <- data.table::fread("northCarolina.csv")
length(nc)
nrow(nc)
nc_sample <- sample(1:nrow(nc_w), 10000, replace = F)
nc_sample <- sample(1:nrow(nc_2), 10000, replace = F)
nc_2 <- nc_2[nc_sample,]
fl_2 <- fl %>%
mutate(across(c(race_gender, of_gender, of_race, hour_of_day, month, year, county_name), as.factor))
fl_sample <- sample(1:nrow(nc_2), 10000, replace = F)
fl_2 <- fl_2[fl_sample,]
fl_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "out_of_state", "investigatory", "of_race", "officer_years_of_service", "officer_age", "hour_of_day", "month", "year", "county_name"), data = fl_2)
fl_2
nc_w <- effectiveWeights("of_gender", controls = c("race_gender", "subject_age", "investigatory", "of_race", "Officer_Years_of_Service", "month", "year", "CMPD_Division"), data = nc_2)
pagedown::chrome_print("~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture26.html", "~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture26.pdf")
knitr::include_graphics('es.png')
library(haven)
data <- read_dta("https://github.com/scunning1975/mixtape/raw/master/castle.dta")
library(estimatr)
View(data)
fs <- lm_robust(l_homicide ~ sid + year)
glimpse(data)
fs <- lm_robust(l_homicide ~ sid + year, data = data %>% filter(post == 0))
fs
resids <- data$l_homicide - fs$fitted.values
fs <- lm_robust(l_homicide ~ sid + year, data = data %>% filter(post == 0), weights = popwt)
predict(data, fs)
fs <- lm(l_homicide ~ sid + year, data = data %>% filter(post == 0), weights = popwt)
predict(data, fs)
predict(fs, data)
install.packages(c("did2s"))
fs <- lm(l_homicide ~ sid + year, data = data %>% filter(post == 0), weights = popwt)
did2s::did2s(caste, "l_homicide", ~0|sid + year, second_stage = ~i(post, ref = F))
did2s::did2s(castle, "l_homicide", ~0|sid + year, second_stage = ~i(post, ref = F))
did2s::did2s(did2s::castle, "l_homicide", ~0|sid + year, second_stage = ~i(post, ref = F))
castle <- did2s::castle
did2s::did2s(castle, "l_homicide", ~0|sid + year, second_stage = ~i(post, ref = F))
View(castle)
did2s::did2s(castle, "l_homicide", ~ 0 |sid + year, second_stage = ~i(post, ref = F))
rlang::last_error()
did2s::did2s(castle, yname = "l_homicide", treatment ="post", cluster_var = "sid", first_stage =  ~ 0 |sid + year, second_stage = ~i(post, ref = F))
fs <- lm(l_homicide ~ sid + year, data = castle %>% filter(post == 0))
adj <- predict(fs, data)
2s <- lm(adj ~ post, data = data)
s2 <- lm(adj ~ post, data = data)
summary(s2)
fs <- lm_robust(l_homicide ~ sid + year, data = castle %>% filter(post == 0))
adj <- predict(fs, data)
s2 <- lm_robust(adj ~ post, data = data, clusters = sid)
summary(s2)
.02409*2
adj <- predict(fs, fs$fitted.values)
lm_robust(l_homicide ~ post, fixed_effects = ~year + sid, clusters = sid, data = data)
s1 <- lm_robust(l_homicide ~ sid + year, data = castle %>% filter(post == 0))
adjusted <- castle$l_homicide - predict(s1, castle)
s2 <- lm_robust(adjusted ~ post, data = castle, clusters = sid)
s2
s1
adjusted
s2 <- lm_robust(adjusted ~ 0+post, data = castle, clusters = sid)
s2
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post))
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))%>%tidy()
.0669 - 1.96*.0570
.0669 + 1.96*.0570
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))%>%tidy()%>%
ggplot(aes(y = term, x = estimate))+
geom_point()+
geom_vline(xintercept = 0, linetype = 2)+
geom_errorbarh(aes(xmin = -0.04482, xmax = .17862, height = 0.1))+
theme_xaringan()
library(xaringanthemer)
library(tidyverse)
library(knitr)
library(estimatr)
library(kableExtra)
library(here)
library(ggthemes)
library(lfe)
library(xaringan)
library(patchwork)
library(bacondecomp)
library(multcomp)
library(fastDummies)
library(magrittr)
style_mono_light(base_color = "#003262",
base_font_size = "25px")
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))%>%tidy()%>%
ggplot(aes(y = term, x = estimate))+
geom_point()+
geom_vline(xintercept = 0, linetype = 2)+
geom_errorbarh(aes(xmin = -0.04482, xmax = .17862, height = 0.1))+
theme_xaringan()
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))%>%tidy()%>%
mutate(term = "Treatment")%>%
ggplot(aes(y = term, x = estimate))+
geom_point()+
geom_vline(xintercept = 0, linetype = 2)+
geom_errorbarh(aes(xmin = -0.04482, xmax = .17862, height = 0.1))+
theme_xaringan()
out <- event_study(
data = castle, yname = "l_homicide", idname = "sid",
tname = "year"
)
out <- did2s::event_study(
data = castle, yname = "l_homicide", idname = "sid",
tname = "year"
)
out <- did2s::event_study(
data = castle, yname = "l_homicide", idname = "sid",
tname = "year", gname = "effyear"
)
plot_event_study(out)
did2s::plot_event_study()
did2s::plot_event_study(out)
out <- did2s::event_study(
data = castle, yname = "l_homicide", idname = "sid",
tname = "year", gname = "effyear"
)
did2s::plot_event_study(out)
did2s::did2s(castle, yname = "l_homicide", treatment = "post", cluster_var = "sid", first_stage = ~0|sid + year, second_stage = ~i(post, ref = F))%>%tidy()%>%
mutate(term = "Treatment")%>%
ggplot(aes(y = term, x = estimate))+
geom_point()+
geom_vline(xintercept = 0, linetype = 2)+
geom_errorbarh(aes(xmin = -0.04482, xmax = .17862, height = 0.1))+
theme_bw()
pagedown::chrome_print("~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture27.html", "~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture27.pdf")
nc <- data.table::fread("northCarolina.csv")
fl <- data.table::fread("florida.csv")
nc_s <- lm_robust(search ~ of_gender + of_race +  race_gender + subject_age + investigatory + Officer_Years_of_Service, data = nc, fixed_effects = ~month + year + CMPD_Division)
fl_s <- lm_robust(search_occur ~ of_gender + of_race + race_gender + subject_age + out_of_state+investigatory + officer_years_of_service+ officer_age, data = fl, fixed_effects = ~hour_of_day + month + year + county_name)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(estimatr)
library(fabricatr)
library(formatR)
library(ri2)
library(randomizr)
knitr::opts_chunk$set(tidy.opts = list(width.cutoff = 60), tidy = TRUE)
nc_s <- lm_robust(search ~ of_gender + of_race +  race_gender + subject_age + investigatory + Officer_Years_of_Service, data = nc, fixed_effects = ~month + year + CMPD_Division)
summary(nc_s)
pagedown::chrome_print("~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/LectureHTML/Lecture25.html", "~/Desktop/github/BerkeleyAppliedCausalInference/course_materials/Lectures/Lecture25.pdf")
